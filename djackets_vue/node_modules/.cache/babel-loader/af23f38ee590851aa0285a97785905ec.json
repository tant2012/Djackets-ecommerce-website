{"remainingRequest":"/Users/terrence/playground/Djackets/djackets_vue/node_modules/babel-loader/lib/index.js!/Users/terrence/playground/Djackets/djackets_vue/src/store/index.js","dependencies":[{"path":"/Users/terrence/playground/Djackets/djackets_vue/src/store/index.js","mtime":1649495479839},{"path":"/Users/terrence/playground/Djackets/djackets_vue/babel.config.js","mtime":1649483312732},{"path":"/Users/terrence/playground/Djackets/djackets_vue/node_modules/cache-loader/dist/cjs.js","mtime":1649468629672},{"path":"/Users/terrence/playground/Djackets/djackets_vue/node_modules/babel-loader/lib/index.js","mtime":1649468630544}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuanNvbi5zdHJpbmdpZnkuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5maWx0ZXIuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nLmpzIjsKaW1wb3J0IHsgZGVmaW5lU3RvcmUgfSBmcm9tICJwaW5pYSI7CmV4cG9ydCB2YXIgdXNlU3RvcmUgPSBkZWZpbmVTdG9yZSgiZGphY2tldHNTdG9yZSIsIHsKICBzdGF0ZTogZnVuY3Rpb24gc3RhdGUoKSB7CiAgICByZXR1cm4gewogICAgICBjYXJ0OiB7CiAgICAgICAgaXRlbXM6IFtdCiAgICAgIH0sCiAgICAgIGlzQXV0aGVudGljYXRlZDogZmFsc2UsCiAgICAgIHRva2VuOiAiIiwKICAgICAgaXNMb2FkaW5nOiBmYWxzZQogICAgfTsKICB9LAogIGdldHRlcnM6IGZ1bmN0aW9uIGdldHRlcnMoKSB7CiAgICByZXR1cm4ge307CiAgfSwKICBhY3Rpb25zOiBmdW5jdGlvbiBhY3Rpb25zKCkgewogICAgcmV0dXJuIHsKICAgICAgaW5pdGlhbGl6ZVN0b3JlOiBmdW5jdGlvbiBpbml0aWFsaXplU3RvcmUoc3RhdGUpIHsKICAgICAgICBpZiAobG9jYWxTdG9yYWdlLmdldEl0ZW0oImNhcnQiKSkgewogICAgICAgICAgc3RhdGUuY2FydCA9IEpTT04ucGFyc2UobG9jYWxTdG9yYWdlLmdldEl0ZW0oImNhcnQiKSk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKCJjYXJ0IiwgSlNPTi5zdHJpbmdpZnkoc3RhdGUuY2FydCkpOwogICAgICAgIH0KICAgICAgfSwKICAgICAgYWRkVG9DYXJ0OiBmdW5jdGlvbiBhZGRUb0NhcnQoc3RhdGUsIGl0ZW0pIHsKICAgICAgICB2YXIgZXhpc3RzID0gc3RhdGUuY2FydC5pdGVtcy5maWx0ZXIoZnVuY3Rpb24gKGkpIHsKICAgICAgICAgIHJldHVybiBpLnByb2R1Y3QuaWQgPT09IGl0ZW0ucHJvZHVjdC5pZDsKICAgICAgICB9KTsKCiAgICAgICAgaWYgKGV4aXN0cy5sZW5ndGgpIHsKICAgICAgICAgIGV4aXN0c1swXS5xdWFudGl0eSA9IHBhcnNlSW50KGV4aXN0c1swXS5xdWFudGl0eSkgKyBwYXJzZUludChpdGVtLnF1YW50aXR5KTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgc3RhdGUuY2FydC5pdGVtLnB1c2goaXRlbSk7CiAgICAgICAgfQoKICAgICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgiY2FydCIsIEpTT04uc3RyaW5naWZ5KHN0YXRlLmNhcnQpKTsKICAgICAgfQogICAgfTsKICB9Cn0pOw=="},{"version":3,"sources":["/Users/terrence/playground/Djackets/djackets_vue/src/store/index.js"],"names":["defineStore","useStore","state","cart","items","isAuthenticated","token","isLoading","getters","actions","initializeStore","localStorage","getItem","JSON","parse","setItem","stringify","addToCart","item","exists","filter","i","product","id","length","quantity","parseInt","push"],"mappings":";;;AAAA,SAASA,WAAT,QAA4B,OAA5B;AAEA,OAAO,IAAMC,QAAQ,GAAGD,WAAW,CAAE,eAAF,EAAmB;AAGpDE,EAAAA,KAAK,EAAE;AAAA,WAAO;AACZC,MAAAA,IAAI,EAAE;AACJC,QAAAA,KAAK,EAAE;AADH,OADM;AAIZC,MAAAA,eAAe,EAAE,KAJL;AAKZC,MAAAA,KAAK,EAAE,EALK;AAMZC,MAAAA,SAAS,EAAE;AANC,KAAP;AAAA,GAH6C;AAWpDC,EAAAA,OAAO,EAAE;AAAA,WAAO,EAAP;AAAA,GAX2C;AAYpDC,EAAAA,OAAO,EAAE;AAAA,WAAO;AACdC,MAAAA,eADc,2BACER,KADF,EACS;AACrB,YAAIS,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAJ,EAAkC;AAChCV,UAAAA,KAAK,CAACC,IAAN,GAAaU,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAb;AACD,SAFD,MAEO;AACLD,UAAAA,YAAY,CAACI,OAAb,CAAqB,MAArB,EAA6BF,IAAI,CAACG,SAAL,CAAed,KAAK,CAACC,IAArB,CAA7B;AACD;AACF,OAPa;AAQdc,MAAAA,SARc,qBAQJf,KARI,EAQGgB,IARH,EAQS;AACrB,YAAMC,MAAM,GAAGjB,KAAK,CAACC,IAAN,CAAWC,KAAX,CAAiBgB,MAAjB,CACb,UAACC,CAAD;AAAA,iBAAOA,CAAC,CAACC,OAAF,CAAUC,EAAV,KAAiBL,IAAI,CAACI,OAAL,CAAaC,EAArC;AAAA,SADa,CAAf;;AAIA,YAAIJ,MAAM,CAACK,MAAX,EAAmB;AACjBL,UAAAA,MAAM,CAAC,CAAD,CAAN,CAAUM,QAAV,GACEC,QAAQ,CAACP,MAAM,CAAC,CAAD,CAAN,CAAUM,QAAX,CAAR,GAA+BC,QAAQ,CAACR,IAAI,CAACO,QAAN,CADzC;AAED,SAHD,MAGO;AACLvB,UAAAA,KAAK,CAACC,IAAN,CAAWe,IAAX,CAAgBS,IAAhB,CAAqBT,IAArB;AACD;;AACDP,QAAAA,YAAY,CAACI,OAAb,CAAqB,MAArB,EAA6BF,IAAI,CAACG,SAAL,CAAed,KAAK,CAACC,IAArB,CAA7B;AACD;AApBa,KAAP;AAAA;AAZ2C,CAAnB,CAA5B","sourcesContent":["import { defineStore } from \"pinia\";\n\nexport const useStore = defineStore( \"djacketsStore\", {\n\n\n  state: () => ({\n    cart: {\n      items: [],\n    },\n    isAuthenticated: false,\n    token: \"\",\n    isLoading: false,\n  }),\n  getters: () => ({}),\n  actions: () => ({\n    initializeStore(state) {\n      if (localStorage.getItem(\"cart\")) {\n        state.cart = JSON.parse(localStorage.getItem(\"cart\"));\n      } else {\n        localStorage.setItem(\"cart\", JSON.stringify(state.cart));\n      }\n    },\n    addToCart(state, item) {\n      const exists = state.cart.items.filter(\n        (i) => i.product.id === item.product.id\n      );\n\n      if (exists.length) {\n        exists[0].quantity =\n          parseInt(exists[0].quantity) + parseInt(item.quantity);\n      } else {\n        state.cart.item.push(item);\n      }\n      localStorage.setItem(\"cart\", JSON.stringify(state.cart));\n    },\n  }),\n});\n"]}]}