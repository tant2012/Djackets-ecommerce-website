{"remainingRequest":"/Users/terrence/playground/Djackets/djackets_vue/node_modules/babel-loader/lib/index.js!/Users/terrence/playground/Djackets/djackets_vue/src/store/index.js","dependencies":[{"path":"/Users/terrence/playground/Djackets/djackets_vue/src/store/index.js","mtime":1649539132999},{"path":"/Users/terrence/playground/Djackets/djackets_vue/babel.config.js","mtime":1649483312732},{"path":"/Users/terrence/playground/Djackets/djackets_vue/node_modules/cache-loader/dist/cjs.js","mtime":1649534107580},{"path":"/Users/terrence/playground/Djackets/djackets_vue/node_modules/babel-loader/lib/index.js","mtime":1649534107741}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuanNvbi5zdHJpbmdpZnkuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5maWx0ZXIuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nLmpzIjsKaW1wb3J0IHsgZGVmaW5lU3RvcmUgfSBmcm9tICJwaW5pYSI7CmV4cG9ydCB2YXIgdXNlU3RvcmUgPSBkZWZpbmVTdG9yZSgiZGphY2tldHNTdG9yZSIsIHsKICBzdGF0ZTogZnVuY3Rpb24gc3RhdGUoKSB7CiAgICByZXR1cm4gewogICAgICBjYXJ0OiB7CiAgICAgICAgaXRlbXM6IFtdCiAgICAgIH0sCiAgICAgIGlzQXV0aGVudGljYXRlZDogZmFsc2UsCiAgICAgIHRva2VuOiAiIiwKICAgICAgaXNMb2FkaW5nOiBmYWxzZQogICAgfTsKICB9LAogIGdldHRlcnM6IHt9LAogIGFjdGlvbnM6IHsKICAgIGluaXRpYWxpemVTdG9yZTogZnVuY3Rpb24gaW5pdGlhbGl6ZVN0b3JlKHN0YXRlKSB7CiAgICAgIGlmIChsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgiY2FydCIpKSB7CiAgICAgICAgc3RhdGUgPSBKU09OLnBhcnNlKGxvY2FsU3RvcmFnZS5nZXRJdGVtKCJjYXJ0IikpOwogICAgICB9IGVsc2UgewogICAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKCJjYXJ0IiwgSlNPTi5zdHJpbmdpZnkoc3RhdGUpKTsKICAgICAgfQogICAgfSwKICAgIGFkZFRvQ2FydDogZnVuY3Rpb24gYWRkVG9DYXJ0KHN0YXRlLCBpdGVtKSB7CiAgICAgIHZhciBleGlzdHMgPSBzdGF0ZS5pdGVtcy5maWx0ZXIoZnVuY3Rpb24gKGkpIHsKICAgICAgICByZXR1cm4gaS5wcm9kdWN0LmlkID09PSBpdGVtLnByb2R1Y3QuaWQ7CiAgICAgIH0pOwoKICAgICAgaWYgKGV4aXN0cy5sZW5ndGgpIHsKICAgICAgICBleGlzdHNbMF0ucXVhbnRpdHkgPSBwYXJzZUludChleGlzdHNbMF0ucXVhbnRpdHkpICsgcGFyc2VJbnQoaXRlbS5xdWFudGl0eSk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgc3RhdGUuaXRlbXMucHVzaChpdGVtKTsKICAgICAgfQoKICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oImNhcnQiLCBKU09OLnN0cmluZ2lmeShzdGF0ZSkpOwogICAgfSwKICAgIHNldElzTG9hZGluZzogZnVuY3Rpb24gc2V0SXNMb2FkaW5nKHN0YXRlLCBzdGF0dXMpIHsKICAgICAgc3RhdGUuaXNMb2FkaW5nID0gc3RhdHVzOwogICAgfQogIH0KfSk7"},{"version":3,"sources":["/Users/terrence/playground/Djackets/djackets_vue/src/store/index.js"],"names":["defineStore","useStore","state","cart","items","isAuthenticated","token","isLoading","getters","actions","initializeStore","localStorage","getItem","JSON","parse","setItem","stringify","addToCart","item","exists","filter","i","product","id","length","quantity","parseInt","push","setIsLoading","status"],"mappings":";;;AAAA,SAASA,WAAT,QAA4B,OAA5B;AAEA,OAAO,IAAMC,QAAQ,GAAGD,WAAW,CAAC,eAAD,EAAkB;AACnDE,EAAAA,KAAK,EAAE;AAAA,WAAO;AACZC,MAAAA,IAAI,EAAE;AACJC,QAAAA,KAAK,EAAE;AADH,OADM;AAIZC,MAAAA,eAAe,EAAE,KAJL;AAKZC,MAAAA,KAAK,EAAE,EALK;AAMZC,MAAAA,SAAS,EAAE;AANC,KAAP;AAAA,GAD4C;AAUnDC,EAAAA,OAAO,EAAE,EAV0C;AAYnDC,EAAAA,OAAO,EAAE;AACPC,IAAAA,eADO,2BACSR,KADT,EACgB;AACrB,UAAIS,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAJ,EAAkC;AAChCV,QAAAA,KAAK,GAAGW,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAR;AACD,OAFD,MAEO;AACLD,QAAAA,YAAY,CAACI,OAAb,CAAqB,MAArB,EAA6BF,IAAI,CAACG,SAAL,CAAed,KAAf,CAA7B;AACD;AACF,KAPM;AAQPe,IAAAA,SARO,qBAQGf,KARH,EAQUgB,IARV,EAQgB;AACrB,UAAMC,MAAM,GAAGjB,KAAK,CAACE,KAAN,CAAYgB,MAAZ,CACb,UAACC,CAAD;AAAA,eAAOA,CAAC,CAACC,OAAF,CAAUC,EAAV,KAAiBL,IAAI,CAACI,OAAL,CAAaC,EAArC;AAAA,OADa,CAAf;;AAIA,UAAIJ,MAAM,CAACK,MAAX,EAAmB;AACjBL,QAAAA,MAAM,CAAC,CAAD,CAAN,CAAUM,QAAV,GACEC,QAAQ,CAACP,MAAM,CAAC,CAAD,CAAN,CAAUM,QAAX,CAAR,GAA+BC,QAAQ,CAACR,IAAI,CAACO,QAAN,CADzC;AAED,OAHD,MAGO;AACLvB,QAAAA,KAAK,CAACE,KAAN,CAAYuB,IAAZ,CAAiBT,IAAjB;AACD;;AACDP,MAAAA,YAAY,CAACI,OAAb,CAAqB,MAArB,EAA6BF,IAAI,CAACG,SAAL,CAAed,KAAf,CAA7B;AACD,KApBM;AAsBP0B,IAAAA,YAtBO,wBAsBM1B,KAtBN,EAsBa2B,MAtBb,EAsBqB;AAC1B3B,MAAAA,KAAK,CAACK,SAAN,GAAkBsB,MAAlB;AACD;AAxBM;AAZ0C,CAAlB,CAA5B","sourcesContent":["import { defineStore } from \"pinia\";\n\nexport const useStore = defineStore(\"djacketsStore\", {\n  state: () => ({\n    cart: {\n      items: [],\n    },\n    isAuthenticated: false,\n    token: \"\",\n    isLoading: false,\n  }),\n\n  getters: {},\n\n  actions: {\n    initializeStore(state) {\n      if (localStorage.getItem(\"cart\")) {\n        state = JSON.parse(localStorage.getItem(\"cart\"));\n      } else {\n        localStorage.setItem(\"cart\", JSON.stringify(state));\n      }\n    },\n    addToCart(state, item) {\n      const exists = state.items.filter(\n        (i) => i.product.id === item.product.id\n      );\n\n      if (exists.length) {\n        exists[0].quantity =\n          parseInt(exists[0].quantity) + parseInt(item.quantity);\n      } else {\n        state.items.push(item);\n      }\n      localStorage.setItem(\"cart\", JSON.stringify(state));\n    },\n\n    setIsLoading(state, status) {\n      state.isLoading = status;\n    },\n  },\n});\n"]}]}